{"version":3,"file":"static/js/119.4c5db07c.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.jsx","redux/user/selectors.js","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  /* margin: 0 auto; */\n  width: 400px;\n  padding: 12px;\n  font-weight: 500;\n  background-color: black;\n  border: 3px solid #fba003;\n  border-radius: 8px;\n`;\nexport const Input = styled.input`\n  margin-top: 10px;\n  padding: 6px 10px;\n  border: 3px solid #fba003;\n  border-radius: 5px;\n  font: inherit;\n  cursor: pointer;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 16px;\n  color: #fba003;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 6px 10px;\n  margin-top: 10px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px;\n  border: 3px solid #fba003;\n  color: #fba003;\n  font-size: 20px;\n \n\n  &:hover,\n  &:focus {\n    color: #ffffff;\n    background-color: #fba003;\n    cursor: pointer;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContactsThunk, getContactsThunk } from 'redux/contactsThunk';\n\nimport { Form, Input, Button } from './ContactForm.styled';\nimport Notiflix from 'notiflix';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  useEffect(() => {\n    dispatch(getContactsThunk());\n  }, [dispatch]);\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    name === 'name' ? setName(value) : setNumber(value);\n  };\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n  const contacts = useSelector(state => state.contacts.items);\n  return (\n    <Form\n      onSubmit={e => {\n        const notifly = () =>\n          Notiflix.Notify.warning(`${name} is alredy in contacts`);\n        const contact = {\n          name: name,\n          number: number,\n        };\n        e.preventDefault();\n        if (\n          contacts.some(\n            value => value.name.toLocaleLowerCase() === name.toLocaleLowerCase()\n          )\n        ) {\n          notifly();\n        } else {\n          dispatch(addContactsThunk(contact));\n          reset();\n        }\n      }}\n    >\n      <Input\n        value={name}\n        onChange={handleChange}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />{' '}\n      <Input\n        value={number}\n        onChange={handleChange}\n        type=\"tel\"\n        name=\"number\"\n        placeholder=\"Number\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n     \n      <Button type=\"submit\">\n        Add\n      </Button>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterCont = styled.div`\ndisplay:flex;\njustify-content:center;\nalign-items: center;\n  margin-bottom: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  color: #000;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 400px;\n  margin-top: 10px;\n  padding: 8px;\n  margin: 0 auto;\n  border-radius: 8px;\n  border: 3px solid #fba003;\n`;\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/sliceFilter';\nimport { FilterCont, Input, Label } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.filter);\n  const dispatch = useDispatch();\n  return (\n    <FilterCont>\n      <Label>\n        Find contacts by name\n        <Input\n          value={filter}\n          onChange={evt => dispatch(filterContact(evt.currentTarget.value))}\n          type=\"text\"\n          name=\"filter\"\n          placeholder=\"Search contacts by name\"\n        />\n      </Label>\n    </FilterCont>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  width: 400px;\n  padding: 12px;\n  border-radius: 8px;\n  background-color: black;\n  border: 3px solid #fba003;\n  list-style: none;\n`;\n\nexport const Item = styled.li`\n  background-color: #ffffff;\n  border: 3px solid #fba003;\n  padding: 6px;\n  border-radius: 8px;\n  margin-bottom: 5px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  font-size: 20px;\n`;\n\nexport const Button = styled.button`\n  padding: 2px 8px;\n  font: inherit;\n  cursor: pointer;\n  border-radius: 8px 8px;\n  border: 3px solid #fba003;\n  color: #fba003;\n  background-color: #e8e8e8;\n  &:hover,\n  &:focus {\n    color: #fff;\n    background-color: #fba003;\n    cursor: pointer;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { delContactsThunk } from 'redux/contactsThunk';\nimport { Button, List, Item } from './ContactList.styled';\nimport { selectFilteredContacts } from 'redux/user/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <List>\n      {filteredContacts.map(({ id, name, number }) => (\n        <Item key={id}>\n          {name + ' : ' + number}\n          {\n            <Button\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => {\n                dispatch(delContactsThunk(id));\n              }}\n            >\n              delete\n            </Button>\n          }\n        </Item>\n      ))}\n    </List>\n  );\n};\n\n\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 1380px;\n  padding: 10px;\n  margin: 0 auto;\n  display:flex;\n  gap: 20px;\n  justify-content:center;\n  align-items:center;\n`;\n","import { ContactForm } from 'components/ContactForm/ContactForm';\n\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Container } from './Contacts.styled';\n\nconst { useEffect } = require('react');\nconst { useDispatch, useSelector } = require('react-redux');\nconst { getContactsThunk } = require('redux/contactsThunk');\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const filtered = useSelector(state => state.filter);\n  const filterContact = e => {\n    const filteredContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filtered.toLowerCase())\n    );\n    return filteredContacts;\n  };\n  useEffect(() => {\n    dispatch(getContactsThunk);\n  }, [dispatch]);\n  return (\n    <Container>\n      <ContactForm />\n      <div>\n        <Filter />\n        <ContactList listContact={filterContact()} />\n      </div>\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["Form","styled","Input","Button","ContactForm","dispatch","useDispatch","useState","name","setName","number","setNumber","useEffect","getContactsThunk","handleChange","evt","target","value","contacts","useSelector","state","items","onSubmit","e","contact","preventDefault","some","toLocaleLowerCase","Notiflix","addContactsThunk","onChange","type","placeholder","title","required","FilterCont","Label","Filter","filter","filterContact","currentTarget","List","Item","selectFilteredContacts","createSelector","toLowerCase","includes","ContactList","filteredContacts","map","id","onClick","delContactsThunk","Container","require","filtered","listContact"],"sourceRoot":""}